#!/usr/bin/python3

import argparse
from datetime import datetime
import datetime as dt
from operator import itemgetter
from pathlib import Path
import subprocess
import sys

parser = argparse.ArgumentParser(description="Run the Tak benchmark")
parser.add_argument(
    "-n", "--input",
    nargs=3, metavar=("X", "Y", "Z"), default=["48", "20", "12"],
    help="The input to the Tak function to use",
)
parser.add_argument(
    "-r", "--runs",
    type=int, default=4,
    help="The number of times to run each implementation",
)
parser.add_argument(
    "-i", "--impl",
    action="append", default=[],
    help="The implementations to run",
)
args = parser.parse_args()

for impl in args.impl:
    path = Path.cwd() / impl
    if not path.exists():
        sys.exit(f"Implementation {impl} not found")

results = []

for path in Path.cwd().iterdir():
    if not path.is_dir():
        continue

    name = path.name
    build = path / "build.sh"
    run = path / "run.sh"

    if not run.exists(): continue
    if args.impl and name not in args.impl: continue
    print(f"Running {name}")

    if build.exists():
        subprocess.run(build, cwd=path, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

    total = dt.timedelta()
    for i in range(args.runs):
        start = datetime.now()
        subprocess.run([run] + args.input, cwd=path, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        end = datetime.now()
        total += end - start
    results.append((path.name, total / args.runs))

results.sort(key=itemgetter(1))

for name, time in results:
    print(f"{name:15} | {time}")
